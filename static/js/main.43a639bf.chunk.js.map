{"version":3,"sources":["redux/login/loginActions.js","redux/login/loginTypes.js","components/Forecast.js","components/SelectCity.js","redux/cities/citiesActions.js","redux/cities/citiesTypes.js","components/Home.js","redux/forecast/forecastActions.js","redux/forecast/forecastTypes.js","components/Login.js","components/AddCity.js","redux/counties/countriesActions.js","redux/counties/countriesTypes.js","components/Main.js","redux/cities/citiesReducer.js","redux/counties/countriesReducer.js","redux/forecast/forecastReducer.js","redux/login/loginReducer.js","redux/rootReducer.js","redux/store.js","App.js","index.js"],"names":["handleLogin","username","type","payload","Forecast","forecast","useSelector","state","Fragment","className","forecastData","name","style","color","borderRadius","fontWeight","Math","round","main","temp_min","temp_max","feels_like","temp","weatherData","description","fontSize","wind","speed","humidity","pressure","src","icon","width","SelectCity","dispatch","useDispatch","favoritesCities","cities","selectedCity","React","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","aria-label","id","aria-controls","aria-expanded","undefined","aria-haspopup","onClick","event","currentTarget","variant","Menu","MenuListProps","onClose","PaperProps","maxHeight","ITEM_HEIGHT","map","city","MenuItem","key","selected","replaceSelectedCity","Home","login","useEffect","selectedCityLocalStorage","options","method","url","axios","then","response","data","getForecastSuccess","console","log","catch","error","errorMessage","message","getForecastFailure","to","removeCurrentCity","forecastLoading","getForecastError","Login","useState","setUsername","usernameErorr","setUsernameErorr","usernameValidRegex","TextField","required","label","value","onBlur","onChange","e","target","test","String","disabled","AddCity","countries","getCountriesError","getCitiesError","loadingCountries","length","loadingCities","selectedCountry","setSelectedCountry","setSelectedCity","newCity","setNewCity","localStorage","getItem","getCountriesSuccess","getCountriesFailure","country","getCitiesSuccess","getCitiesFailure","getCities","Autocomplete","sx","loading","isOptionEqualToValue","getOptionLabel","renderOption","props","Box","component","mr","flexShrink","flag","alt","renderInput","params","InputProps","endAdornment","CircularProgress","size","saveSelectedCity","addNewCity","endIcon","CheckBox","Main","usernameLocalStorage","parsedCities","JSON","parse","setFavoritesCities","PrivateRoute","Component","rest","render","pathname","exact","path","from","initialState","citiesLoading","countriesLoading","loginReducer","action","setItem","removeItem","rootReducer","combineReducers","includes","stringify","newFavoritesCities","filter","newSelectedCity","clear","weather","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","document","querySelector","getElementById"],"mappings":"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","file":"static/js/main.43a639bf.chunk.js","sourcesContent":["import { HANDLE_LOGIN, HANDLE_LOGOUT } from './loginTypes';\r\n\r\nexport const handleLogin = (username) => {\r\n\treturn {\r\n\t\ttype: HANDLE_LOGIN,\r\n\t\tpayload: username,\r\n\t};\r\n};\r\n\r\nexport const handleLogout = () => {\r\n\treturn {\r\n\t\ttype: HANDLE_LOGOUT,\r\n\t};\r\n};\r\n","export const HANDLE_LOGIN = 'HANDLE_LOGIN';\r\nexport const HANDLE_LOGOUT = 'HANDLE_LOGOUT';\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DynamicTime from './DynamicTime';\r\nimport './styles/Forecast.css';\r\n\r\nfunction Forecast() {\r\n\tconst forecast = useSelector((state) => state.forecast);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"home__main-forecast-head\">\r\n\t\t\t\t<h2>{forecast.forecastData.name} Weather Forecast</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"home__main-forecast-body\">\r\n\t\t\t\t<div className=\"container py-5 h-100\">\r\n\t\t\t\t\t<div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n\t\t\t\t\t\t<div className=\"col-md-8 col-lg-6 col-xl-4\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"card\"\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#4B515D', borderRadius: '35px' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body p-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"flex-grow-1\" style={{ fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{forecast?.forecastData?.name}\r\n\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex flex-column\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6>{/* <DynamicTime /> */}</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{Math.round(forecast?.forecastData?.main?.temp_min)}°C\r\n\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{Math.round(forecast?.forecastData?.main?.temp_max)}°C\r\n\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\tfeels like:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{Math.round(forecast?.forecastData?.main?.feels_like)}°C\r\n\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex flex-column text-center mt-5 mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t<h6\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"display-4 mb-0 font-weight-bold\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#1C2331' }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{Math.round(forecast?.forecastData?.main?.temp)}°C\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"small\" style={{ color: '#868B94' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{forecast?.weatherData[0]?.description}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex-grow-1\" style={{ fontSize: '1rem' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-wind fa-fw\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#868B94' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ms-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{forecast?.forecastData?.wind?.speed} m/s\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-tint fa-fw\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#868B94' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ms-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{forecast?.forecastData?.main?.humidity}%\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-sun fa-fw\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: '#868B94' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ms-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{forecast?.forecastData?.main?.pressure} mm\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${forecast?.weatherData[0]?.icon}@2x.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"100px\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default Forecast;\r\n","import * as React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport { replaceSelectedCity } from '../redux/cities/citiesActions';\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nfunction SelectCity() {\r\n\tconst dispatch = useDispatch();\r\n\tconst favoritesCities = useSelector((state) => state.cities.favoritesCities);\r\n\tconst selectedCity = useSelector((state) => state.cities.selectedCity);\r\n\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst open = Boolean(anchorEl);\r\n\tconst handleClick = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\taria-label=\"more\"\r\n\t\t\t\tid=\"long-button\"\r\n\t\t\t\taria-controls=\"long-menu\"\r\n\t\t\t\taria-expanded={open ? 'true' : undefined}\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t>\r\n\t\t\t\tSelect city\r\n\t\t\t\t<MoreVertIcon />\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tid=\"long-menu\"\r\n\t\t\t\tMenuListProps={{\r\n\t\t\t\t\t'aria-labelledby': 'long-button',\r\n\t\t\t\t}}\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tmaxHeight: ITEM_HEIGHT * 4.5,\r\n\t\t\t\t\t\twidth: '20ch',\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{favoritesCities?.map((city) => (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tkey={city}\r\n\t\t\t\t\t\tselected={city === selectedCity}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleClose();\r\n\t\t\t\t\t\t\tif (city !== selectedCity) {\r\n\t\t\t\t\t\t\t\tdispatch(replaceSelectedCity(city));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{city}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SelectCity;\r\n","import axios from 'axios';\r\nimport {\r\n\tADD_NEW_CITY,\r\n\tCLEAR_STATE,\r\n\tGET_CITIES_FAILURE,\r\n\tGET_CITIES_REQUEST,\r\n\tGET_CITIES_SUCCESS,\r\n\tINIT_SELECTED_CITY,\r\n\tREMOVE_CURRENT_CITY,\r\n\tREPLACE_SELECTED_CITY,\r\n\tSAVE_SELECTED_CITY,\r\n\tSET_FAVORITES_CITIES,\r\n} from './citiesTypes';\r\n\r\nexport const getCitiesRequest = () => {\r\n\treturn {\r\n\t\ttype: GET_CITIES_REQUEST,\r\n\t};\r\n};\r\n\r\nexport const getCitiesSuccess = (response) => {\r\n\treturn {\r\n\t\ttype: GET_CITIES_SUCCESS,\r\n\t\tpayload: response,\r\n\t};\r\n};\r\n\r\nexport const getCitiesFailure = (error) => {\r\n\treturn {\r\n\t\ttype: GET_CITIES_FAILURE,\r\n\t\tpayload: error,\r\n\t};\r\n};\r\n\r\nexport const saveSelectedCity = (selectedCity) => {\r\n\treturn {\r\n\t\ttype: SAVE_SELECTED_CITY,\r\n\t\tpayload: selectedCity,\r\n\t};\r\n};\r\n\r\nexport const replaceSelectedCity = (city) => {\r\n\treturn {\r\n\t\ttype: REPLACE_SELECTED_CITY,\r\n\t\tpayload: city,\r\n\t};\r\n};\r\n\r\nexport const addNewCity = (newCity) => {\r\n\treturn {\r\n\t\ttype: ADD_NEW_CITY,\r\n\t\tpayload: newCity,\r\n\t};\r\n};\r\n\r\nexport const removeCurrentCity = (selectedCity) => {\r\n\treturn {\r\n\t\ttype: REMOVE_CURRENT_CITY,\r\n\t\tpayload: selectedCity,\r\n\t};\r\n};\r\n\r\nexport const initSelectedCitiy = (selectedCity) => {\r\n\treturn {\r\n\t\ttype: INIT_SELECTED_CITY,\r\n\t\tpayload: selectedCity,\r\n\t};\r\n};\r\n\r\nexport const setFavoritesCities = (favoritesCities) => {\r\n\treturn {\r\n\t\ttype: SET_FAVORITES_CITIES,\r\n\t\tpayload: favoritesCities,\r\n\t};\r\n};\r\n\r\nexport const clearCitiesState = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_STATE,\r\n\t};\r\n};\r\n\r\nexport const getCities = (selectedCountry) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(getCitiesRequest());\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: 'https://countriesnow.space/api/v0.1/countries/cities',\r\n\t\t\tdata: {\r\n\t\t\t\tcountry: selectedCountry,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\taxios(options)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconst cities = response.data.data;\r\n\t\t\t\tdispatch(getCitiesSuccess(cities));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst errorMessage = error?.message;\r\n\t\t\t\tdispatch(getCitiesFailure(errorMessage));\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t};\r\n};\r\n","export const GET_CITIES_REQUEST = 'GET_CITIES_REQUEST';\r\nexport const GET_CITIES_SUCCESS = 'GET_CITIES_SUCCESS';\r\nexport const GET_CITIES_FAILURE = 'GET_CITIES_FAILURE';\r\n\r\nexport const SAVE_SELECTED_CITY = 'SAVE_SELECTED_CITY';\r\nexport const REPLACE_SELECTED_CITY = 'REPLACE_SELECTED_CITY';\r\nexport const ADD_NEW_CITY = 'ADD_NEW_CITY';\r\nexport const REMOVE_CURRENT_CITY = 'REMOVE_CURRENT_CITY';\r\n\r\nexport const INIT_SELECTED_CITY = 'INIT_SELECTED_CITY';\r\nexport const SET_FAVORITES_CITIES = 'SET_FAVORITES_CITIES';\r\n\r\nexport const CLEAR_STATE = 'CLEAR_STATE';\r\n","import { Button } from '@mui/material';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\tclearCitiesState,\r\n\tremoveCurrentCity,\r\n} from '../redux/cities/citiesActions';\r\nimport { getForecast } from '../redux/forecast/forecastActions';\r\nimport { handleLogout } from '../redux/login/loginActions';\r\nimport Forecast from './Forecast';\r\nimport SelectCity from './SelectCity';\r\nimport './styles/Home.css';\r\n\r\nfunction Home() {\r\n\tconst dispatch = useDispatch();\r\n\tconst username = useSelector((state) => state.login.username);\r\n\tconst selectedCity = useSelector((state) => state.cities.selectedCity);\r\n\tconst forecast = useSelector((state) => state.forecast);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedCity) {\r\n\t\t\tdispatch(getForecast(selectedCity));\r\n\t\t}\r\n\t}, [selectedCity]);\r\n\r\n\tconst handleClick = () => {\r\n\t\tdispatch(handleLogout());\r\n\t\tdispatch(clearCitiesState());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"home__wrapper\">\r\n\t\t\t<header className=\"home__header\">\r\n\t\t\t\t<div className=\"home__header-greeting\">\r\n\t\t\t\t\t<div className=\"home__header-logo\">\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"home__header-logo link\">\r\n\t\t\t\t\t\t\t<h1>Forecast</h1>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"home__header-title\">\r\n\t\t\t\t\t\t<h1>Hello, {username}!</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"home__header-logOut\">\r\n\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleClick}>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"home__header-buttons\">\r\n\t\t\t\t\t<Link to=\"/add_city\">\r\n\t\t\t\t\t\t<div className=\"home__header-addNewCity\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\">Add new city</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t<div className=\"home__header-selectCity\">\r\n\t\t\t\t\t\t<SelectCity />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"home__header-removeCurrentCity\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tdispatch(removeCurrentCity(selectedCity));\r\n\t\t\t\t\t\t\t\tconsole.log(selectedCity);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRemove current city\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<main className=\"home__main\">\r\n\t\t\t\t{!selectedCity ? (\r\n\t\t\t\t\t<div className=\"home__main-addCity-button-wrapper\">\r\n\t\t\t\t\t\t<h2>Please press the button to select a city:</h2>\r\n\t\t\t\t\t\t<Link to=\"/add_city\" className=\"login__body link\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\">Select city</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"home__main-forecast-wrapper\">\r\n\t\t\t\t\t\t{forecast.forecastLoading ? (\r\n\t\t\t\t\t\t\t<div className=\"home__main-forecast-loading\">\r\n\t\t\t\t\t\t\t\t<h3>Loading...</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : forecast.getForecastError ? (\r\n\t\t\t\t\t\t\t<div className=\"home__main-forecast-error\">\r\n\t\t\t\t\t\t\t\tLoading forecast Error: {forecast.getForecastError}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Forecast />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\nimport {\r\n\tGET_FORECAST_FAILURE,\r\n\tGET_FORECAST_REQUEST,\r\n\tGET_FORECAST_SUCCESS,\r\n} from './forecastTypes';\r\n\r\nexport const getForecastRequest = () => {\r\n\treturn {\r\n\t\ttype: GET_FORECAST_REQUEST,\r\n\t};\r\n};\r\n\r\nexport const getForecastSuccess = (response) => {\r\n\treturn {\r\n\t\ttype: GET_FORECAST_SUCCESS,\r\n\t\tpayload: response,\r\n\t};\r\n};\r\n\r\nexport const getForecastFailure = (error) => {\r\n\treturn {\r\n\t\ttype: GET_FORECAST_FAILURE,\r\n\t\tpayload: error,\r\n\t};\r\n};\r\n\r\nexport const getForecast = (selectedCityLocalStorage) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(getForecastRequest());\r\n\r\n\t\tconst apiKey = '0416fc94bd8c14e8697e298e323b8846';\r\n\t\tconst options = {\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: `http://api.openweathermap.org/data/2.5/weather?q=${selectedCityLocalStorage}&appid=${apiKey}&units=metric`,\r\n\t\t};\r\n\r\n\t\taxios(options)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconst forecastData = response.data;\r\n\t\t\t\tdispatch(getForecastSuccess(forecastData));\r\n\t\t\t\tconsole.log(forecastData);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst errorMessage = error?.response?.data?.message;\r\n\t\t\t\tdispatch(getForecastFailure(errorMessage));\r\n\t\t\t\tconsole.log(error?.response?.data);\r\n\t\t\t});\r\n\t};\r\n};\r\n","export const GET_FORECAST_REQUEST = 'GET_FORECAST_REQUEST';\r\nexport const GET_FORECAST_SUCCESS = 'GET_FORECAST_SUCCESS';\r\nexport const GET_FORECAST_FAILURE = 'GET_FORECAST_FAILURE';\r\n","import { Button, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleLogin } from '../redux/login/loginActions';\r\nimport './styles/Login.css';\r\n\r\nfunction Login() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [usernameErorr, setUsernameErorr] = useState('');\r\n\r\n\tconst usernameValidRegex = /^(?=[a-zA-Z._]{3,12}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetUsername(e.target.value);\r\n\r\n\t\tif (!usernameValidRegex.test(String(e.target.value))) {\r\n\t\t\tsetUsernameErorr(\r\n\t\t\t\t'Username requires 3 to 12 characters, only latin letters can be used'\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetUsernameErorr('');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tif (usernameErorr) {\r\n\t\t\tsetUsernameErorr('Invalid input');\r\n\t\t} else {\r\n\t\t\tdispatch(handleLogin(username));\r\n\t\t\tsetUsername('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"login__wrapper\">\r\n\t\t\t<div className=\"login__head\">\r\n\t\t\t\t<h2>Please enter your name first:</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"login__body\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\tlabel=\"Name is required\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonBlur={() => setUsernameErorr('')}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<Link to=\"/\" className=\"login__body link\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tdisabled={!username}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"login__error-wrapper\">\r\n\t\t\t\t<p className=\"login__error-input\"> {usernameErorr} </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import { CheckBox } from '@mui/icons-material';\r\nimport {\r\n\tAutocomplete,\r\n\tButton,\r\n\tCircularProgress,\r\n\tTextField,\r\n} from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\taddNewCity,\r\n\tgetCities,\r\n\tsaveSelectedCity,\r\n} from '../redux/cities/citiesActions';\r\nimport { getCountries } from '../redux/counties/countriesActions';\r\nimport './styles/AddCity.css';\r\n\r\nfunction AddCity() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst countries = useSelector((state) => state.countries.countries);\r\n\tconst getCountriesError = useSelector(\r\n\t\t(state) => state.countries.getCountriesError\r\n\t);\r\n\r\n\tconst cities = useSelector((state) => state.cities.cities);\r\n\tconst getCitiesError = useSelector((state) => state.cities.getCitiesError);\r\n\r\n\tconst loadingCountries = countries?.length === 0;\r\n\tconst loadingCities = cities?.length === 0;\r\n\r\n\tconst [selectedCountry, setSelectedCountry] = useState('');\r\n\tconst [selectedCity, setSelectedCity] = useState('');\r\n\tconst [newCity, setNewCity] = useState('');\r\n\r\n\tconst selectedCityLocalStorage = localStorage.getItem('selectedCity');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!countries.length) {\r\n\t\t\tdispatch(getCountries());\r\n\t\t}\r\n\t}, [countries]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedCountry) {\r\n\t\t\tdispatch(getCities(selectedCountry));\r\n\t\t}\r\n\t}, [selectedCountry]);\r\n\r\n\tconst handleClick = () => {\r\n\t\tif (selectedCity) {\r\n\t\t\tdispatch(saveSelectedCity(selectedCity));\r\n\t\t} else if (newCity) {\r\n\t\t\tdispatch(addNewCity(newCity));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"addCity__wrapper\">\r\n\t\t\t{(getCountriesError && (\r\n\t\t\t\t<div className=\"addCity__error\">\r\n\t\t\t\t\tCountries loading error: {getCountriesError}\r\n\t\t\t\t</div>\r\n\t\t\t)) ||\r\n\t\t\t\t(getCitiesError && (\r\n\t\t\t\t\t<div className=\"addCity__error\">\r\n\t\t\t\t\t\tCities loading error: {getCitiesError}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t<div className=\"addCity__autocomplete-country\">\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tonChange={(e, value) => setSelectedCountry(value?.name)}\r\n\t\t\t\t\tid=\"country-select\"\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\toptions={countries}\r\n\t\t\t\t\tloading={loadingCountries}\r\n\t\t\t\t\tisOptionEqualToValue={(country, value) => country.name === value.name}\r\n\t\t\t\t\tgetOptionLabel={(country) => country.name}\r\n\t\t\t\t\trenderOption={(props, country) => (\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tcomponent=\"li\"\r\n\t\t\t\t\t\t\tsx={{ '& > img': { mr: 2, flexShrink: 0 } }}\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img loading=\"lazy\" width=\"20\" src={country.flag} alt=\"\" />\r\n\t\t\t\t\t\t\t{country.name}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\tlabel=\"Choose a country...\"\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t{loadingCountries ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\r\n\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"addCity__autocomplete-city\">\r\n\t\t\t\t{selectedCountry && (\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tonChange={(e, value) => {\r\n\t\t\t\t\t\t\tselectedCityLocalStorage\r\n\t\t\t\t\t\t\t\t? setNewCity(value)\r\n\t\t\t\t\t\t\t\t: setSelectedCity(value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tid=\"city-select\"\r\n\t\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\t\toptions={cities}\r\n\t\t\t\t\t\tloading={loadingCities}\r\n\t\t\t\t\t\tisOptionEqualToValue={(city, value) => city === value}\r\n\t\t\t\t\t\tgetOptionLabel={(city) => city}\r\n\t\t\t\t\t\trenderOption={(props, city) => (\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tcomponent=\"li\"\r\n\t\t\t\t\t\t\t\tsx={{ '& > img': { mr: 2, flexShrink: 0 } }}\r\n\t\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{city}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\tlabel=\"Choose a city...\"\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t{loadingCities ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{(selectedCity || newCity) && (\r\n\t\t\t\t<Link to=\"/\" className=\"addCity__link link\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tendIcon={<CheckBox />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave city\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddCity;\r\n","import axios from 'axios';\r\nimport {\r\n\tGET_COUNTRIES_FAILURE,\r\n\tGET_COUNTRIES_REQUEST,\r\n\tGET_COUNTRIES_SUCCESS,\r\n} from './countriesTypes';\r\n\r\nexport const getCountriesRequest = () => {\r\n\treturn {\r\n\t\ttype: GET_COUNTRIES_REQUEST,\r\n\t};\r\n};\r\n\r\nexport const getCountriesSuccess = (response) => {\r\n\treturn {\r\n\t\ttype: GET_COUNTRIES_SUCCESS,\r\n\t\tpayload: response,\r\n\t};\r\n};\r\n\r\nexport const getCountriesFailure = (error) => {\r\n\treturn {\r\n\t\ttype: GET_COUNTRIES_FAILURE,\r\n\t\tpayload: error,\r\n\t};\r\n};\r\n\r\nexport const getCountries = () => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(getCountriesRequest());\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'https://countriesnow.space/api/v0.1/countries/flag/images',\r\n\t\t};\r\n\r\n\t\taxios(options)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconst countries = response.data.data;\r\n\t\t\t\tdispatch(getCountriesSuccess(countries));\r\n\t\t\t\tconsole.log(countries);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst errorMessage = error?.message;\r\n\t\t\t\tdispatch(getCountriesFailure(errorMessage));\r\n\t\t\t\tconsole.log('Error: ', errorMessage);\r\n\t\t\t});\r\n\t};\r\n};\r\n","export const GET_COUNTRIES_REQUEST = ' GET_COUNTRIES_REQUEST';\r\nexport const GET_COUNTRIES_SUCCESS = ' GET_COUNTRIES_SUCCESS';\r\nexport const GET_COUNTRIES_FAILURE = ' GET_COUNTRIES_FAILURE';\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport AddCity from './AddCity';\r\nimport {\r\n\tinitSelectedCitiy,\r\n\tsetFavoritesCities,\r\n} from '../redux/cities/citiesActions';\r\nimport { handleLogin } from '../redux/login/loginActions';\r\n\r\nfunction Main() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst usernameLocalStorage = localStorage.getItem('username');\r\n\tconst selectedCityLocalStorage = localStorage.getItem('selectedCity');\r\n\tconst favoritesCities = localStorage.getItem('favoritesCities');\r\n\r\n\tif (usernameLocalStorage) {\r\n\t\tdispatch(handleLogin(usernameLocalStorage));\r\n\t}\r\n\tif (selectedCityLocalStorage) {\r\n\t\tdispatch(initSelectedCitiy(selectedCityLocalStorage));\r\n\t}\r\n\tif (favoritesCities) {\r\n\t\tconst parsedCities = JSON.parse(favoritesCities);\r\n\t\tdispatch(setFavoritesCities(parsedCities.data));\r\n\t\tconsole.log(parsedCities);\r\n\t}\r\n\r\n\tconst username = useSelector((state) => state.login.username);\r\n\r\n\tconst PrivateRoute = ({ component: Component }, ...rest) => (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tusername ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect to={{ pathname: '/login' }} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<div className=\"mainScreen__wrapper\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<PrivateRoute exact path=\"/\" component={Home} />\r\n\t\t\t\t\t<PrivateRoute exact path=\"/add_city\" component={AddCity} />\r\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","import {\r\n\tADD_NEW_CITY,\r\n\tCLEAR_STATE,\r\n\tGET_CITIES_FAILURE,\r\n\tGET_CITIES_REQUEST,\r\n\tGET_CITIES_SUCCESS,\r\n\tINIT_SELECTED_CITY,\r\n\tREMOVE_CURRENT_CITY,\r\n\tREPLACE_SELECTED_CITY,\r\n\tSAVE_SELECTED_CITY,\r\n\tSET_FAVORITES_CITIES,\r\n} from './citiesTypes';\r\n\r\nconst initialState = {\r\n\tcitiesLoading: false,\r\n\tcities: [],\r\n\tgetCitiesError: '',\r\n\tselectedCity: '',\r\n\tfavoritesCities: [],\r\n};\r\n\r\nexport const citiesReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_CITIES_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcitiesLoading: true,\r\n\t\t\t};\r\n\t\tcase GET_CITIES_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcitiesLoading: false,\r\n\t\t\t\tcities: action.payload,\r\n\t\t\t\tgetCitiesError: '',\r\n\t\t\t};\r\n\t\tcase GET_CITIES_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcitiesLoading: false,\r\n\t\t\t\tgetCitiesError: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase SAVE_SELECTED_CITY:\r\n\t\t\tlocalStorage.setItem('selectedCity', action.payload);\r\n\r\n\t\t\tif (state?.favoritesCities?.includes(action.payload)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tselectedCity: action.payload,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t'favoritesCities',\r\n\t\t\t\t\tJSON.stringify({ data: [action.payload] })\r\n\t\t\t\t);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tselectedCity: action.payload,\r\n\t\t\t\t\tfavoritesCities: [action.payload],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\tcase REPLACE_SELECTED_CITY:\r\n\t\t\tlocalStorage.setItem('selectedCity', action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedCity: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase ADD_NEW_CITY:\r\n\t\t\tif (state.favoritesCities.includes(action.payload)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t'favoritesCities',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\tdata: [...state.favoritesCities, action.payload],\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tfavoritesCities: [...state.favoritesCities, action.payload],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\tcase REMOVE_CURRENT_CITY:\r\n\t\t\tlocalStorage.removeItem('selectedCity');\r\n\r\n\t\t\tconst newFavoritesCities = [...state.favoritesCities].filter(\r\n\t\t\t\t(city) => city !== action.payload\r\n\t\t\t);\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t'favoritesCities',\r\n\t\t\t\tJSON.stringify({ data: newFavoritesCities })\r\n\t\t\t);\r\n\r\n\t\t\tconst newSelectedCity = newFavoritesCities.length\r\n\t\t\t\t? newFavoritesCities[0]\r\n\t\t\t\t: '';\r\n\t\t\tlocalStorage.setItem('selectedCity', newSelectedCity);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedCity: newSelectedCity,\r\n\t\t\t\tfavoritesCities: newFavoritesCities,\r\n\t\t\t};\r\n\r\n\t\tcase INIT_SELECTED_CITY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedCity: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase SET_FAVORITES_CITIES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfavoritesCities: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase CLEAR_STATE:\r\n\t\t\tlocalStorage.clear();\r\n\t\t\treturn {\r\n\t\t\t\tinitialState,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import {\r\n\tGET_COUNTRIES_FAILURE,\r\n\tGET_COUNTRIES_REQUEST,\r\n\tGET_COUNTRIES_SUCCESS,\r\n} from './countriesTypes';\r\n\r\nconst initialState = {\r\n\tcountriesLoading: false,\r\n\tcountries: [],\r\n\tgetCountriesError: '',\r\n};\r\n\r\nexport const countriesReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_COUNTRIES_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountriesLoading: true,\r\n\t\t\t};\r\n\t\tcase GET_COUNTRIES_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountriesLoading: false,\r\n\t\t\t\tcountries: action.payload,\r\n\t\t\t\tgetCountriesError: '',\r\n\t\t\t};\r\n\t\tcase GET_COUNTRIES_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountriesLoading: false,\r\n\t\t\t\tgetCountriesError: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import {\r\n\tGET_FORECAST_FAILURE,\r\n\tGET_FORECAST_REQUEST,\r\n\tGET_FORECAST_SUCCESS,\r\n} from './forecastTypes';\r\n\r\nconst initialState = {\r\n\tforecastLoading: false,\r\n\tforecastData: {},\r\n\tweatherData: [],\r\n\tgetForecastError: '',\r\n};\r\n\r\nexport const forecastReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_FORECAST_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tforecastLoading: true,\r\n\t\t\t};\r\n\t\tcase GET_FORECAST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tforecastLoading: false,\r\n\t\t\t\tforecastData: action.payload,\r\n\t\t\t\tweatherData: action.payload.weather,\r\n\t\t\t\tgetForecastError: '',\r\n\t\t\t};\r\n\t\tcase GET_FORECAST_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tforecastLoading: false,\r\n\t\t\t\tgetForecastError: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { HANDLE_LOGIN, HANDLE_LOGOUT } from './loginTypes';\r\n\r\nconst initialState = {\r\n\tusername: '',\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase HANDLE_LOGIN:\r\n\t\t\tlocalStorage.setItem('username', action.payload);\r\n\t\t\treturn {\r\n\t\t\t\tusername: action.payload,\r\n\t\t\t};\r\n\t\tcase HANDLE_LOGOUT:\r\n\t\t\tlocalStorage.removeItem('username');\r\n\t\t\treturn {\r\n\t\t\t\tinitialState,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default loginReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { citiesReducer } from './cities/citiesReducer';\r\nimport { countriesReducer } from './counties/countriesReducer';\r\nimport { forecastReducer } from './forecast/forecastReducer';\r\nimport loginReducer from './login/loginReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tlogin: loginReducer,\r\n\tcountries: countriesReducer,\r\n\tcities: citiesReducer,\r\n\tforecast: forecastReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport store from './redux/store';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Main />\r\n\t\t\t</div>\r\n\t\t</Provider>\r\n\t);\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n\t\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}